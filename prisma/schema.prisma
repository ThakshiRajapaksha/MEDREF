generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Lab {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  referrals Referral[]
  testtype TestType[]
}

model Patient {
  id            Int      @id @default(autoincrement())
  first_name    String
  last_name     String
  age           Int
  gender        String
  contact       String
  medicalHistory String?
  createdBy     User     @relation(fields: [createdById], references: [id])
  referrals     Referral[] // Update this to be the only reference for illnesses and allergies
  createdById   Int
  createdAt     DateTime @default(now())
}

model Referral {
  id                   Int      @id @default(autoincrement())
  patientId            Int
  testId               Int
  labId                Int
  doctorId             Int
  status               String   @default("Pending")
  allergies            String?
  illness              String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @default(now())
  iv                   Bytes?
  filePath             String?
  test_report          Bytes?
  test_report_filename String?
  doctor               User @relation("DoctorReferrals", fields: [doctorId], references: [id])
  lab                  Lab      @relation(fields: [labId], references: [id])
  patient              Patient  @relation(fields: [patientId], references: [id])
  test                 TestType @relation(fields: [testId], references: [id])
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique
  users User[]
}

model TestType {
  id         Int       @id @default(autoincrement())
  name       String    
  labId      Int      
  lab        Lab      @relation(fields: [labId], references: [id])
  referrals  Referral[] 
}

model User {
  id         Int      @id @default(autoincrement())
  first_name String?  @db.VarChar(255)
  last_name  String   @db.VarChar(255)
  mobile     String   @db.VarChar(255)
  email      String   @unique
  password   String
  role       Role     @relation(fields: [roleId], references: [id])
  patients   Patient[]
  roleId     Int
  referrals  Referral[] @relation("DoctorReferrals")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt()
}
